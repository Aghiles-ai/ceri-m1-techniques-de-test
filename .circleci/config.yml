# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# il faut activer les orbs non certifier 
orbs:
  codecov: codecov/codecov@4.0.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/openjdk
      - image: cimg/openjdk:17.0

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout

      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      
      - run:
          name: Test and Generate Coverage
          command: mvn test jacoco:report 
      
      - run:
          name: CheckStyle java code
          command: mvn checkstyle:check

      - codecov/upload:  # Upload the coverage report to Codecov
          file: target/site/jacoco/jacoco.xml  # Specify the correct path to the coverage report

      - run:
          name:  Build docs
          command:  javadoc -d doc src/main/java/fr/univavignon/pokedex/api/*

      - run:
          name: Debug Javadoc Files
          command: ls -R target/site
      
      - persist_to_workspace:
          root: .
          paths:
            - doc
  
  docs-deploy:
    docker:
      - image: node
    steps:
      - checkout
      - attach_workspace:
          at: doc
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config --global user.email "loudaaghiles64@gmail.com"
            git config --global user.name "Aghiles"
            echo "am token ${githubpage_Token}"
            git config credentials.helper store
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git clone --branch gh-pages  https://$githubpage_Token@github.com/Aghiles-ai/ceri-m1-techniques-de-test gh-pages-branch
            cd gh-pages-branch
            cp -R ../doc/* .
            git add .
            git commit -m "Update documentation"
            git push origin gh-pages

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - docs-deploy:
          requires:
            - build-and-test

  
  